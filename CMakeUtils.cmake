function(doTargetsExists targets result)
  set(${result} true PARENT_SCOPE)
  foreach(target ${targets})
    if(NOT TARGET ${target})
      set(${result} false PARENT_SCOPE)
      break()
    endif()
  endforeach()
endfunction()

function(addObjectLibrary name sources targets)
  doTargetsExists("${targets}" prereq)
  if(${prereq})
    add_library(${name} STATIC ${sources})
    target_include_directories(${name} PUBLIC $<INSTALL_INTERFACE:include>)
    target_include_directories(${name} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>)
    target_link_libraries(${name} PUBLIC ${targets})
  endif()
endfunction()

function(addHeaderLibrary name targets)
  doTargetsExists("${targets}" prereq)
  if(${prereq})
    add_library(${name} INTERFACE)
    target_include_directories(${name} INTERFACE $<INSTALL_INTERFACE:include>)
    target_include_directories(${name} INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>)
    target_link_libraries(${name} INTERFACE ${targets})
  endif()
endfunction()

function(addApp2 name srcs targets)
  doTargetsExists("${targets}" prereq)
  if(NOT ${prereq})
    return()
  endif()

  add_executable(${name} ${srcs})
  target_include_directories(${name} PUBLIC $<INSTALL_INTERFACE:include>)
  target_include_directories(${name} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>)
  target_link_libraries(${name} PUBLIC ${targets})
  set_target_properties(${name} PROPERTIES BUILD_WITH_INSTALL_RPATH 1 INSTALL_RPATH ${CMAKE_CURRENT_BINARY_DIR})
endfunction()

function(addApp3 name srcs targets output)
  doTargetsExists("${targets}" prereq)
  if(NOT ${prereq})
    return()
  endif()

  add_executable(${name} ${srcs})
  target_include_directories(${name} PUBLIC $<INSTALL_INTERFACE:include>)
  target_include_directories(${name} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>)
  target_link_libraries(${name} PUBLIC ${targets})
  set_target_properties(${name} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${output})
endfunction()

function(createTargetForBadLibrary name libraries includes)
  if(NOT "${libraries}" STREQUAL "")
    add_library(${name} INTERFACE)
    target_link_libraries(${name} INTERFACE ${libraries})
    target_include_directories(${name} INTERFACE $<BUILD_INTERFACE:${includes}>)
  endif()
endfunction()
